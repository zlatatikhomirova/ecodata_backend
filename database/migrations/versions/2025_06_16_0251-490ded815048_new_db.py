"""new db

Revision ID: 490ded815048
Revises: 
Create Date: 2025-06-16 02:51:08.379379

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '490ded815048'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('countries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('genus_list',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('house_numbers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('job_titles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('leaf_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('life_forms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('locations_on_plant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('measurement_units',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('name_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('organization_details_list',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organization_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pollution_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('settlement_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sides_of_the_world',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('species_list',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('statuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('streets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('biochem_features',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('measurement_unit_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['measurement_unit_id'], ['measurement_units.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('leaves',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('side_of_the_world_id', sa.Integer(), nullable=False),
    sa.Column('location_on_plant_id', sa.Integer(), nullable=False),
    sa.Column('s3_key_leaf_info', sa.String(), nullable=False),
    sa.Column('s3_key_leaf_mask', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['location_on_plant_id'], ['locations_on_plant.id'], ),
    sa.ForeignKeyConstraint(['side_of_the_world_id'], ['sides_of_the_world.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('s3_key_leaf_info'),
    sa.UniqueConstraint('s3_key_leaf_mask')
    )
    op.create_table('morphological_features',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('measurement_unit_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['measurement_unit_id'], ['measurement_units.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('plants_descriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('life_form_id', sa.Integer(), nullable=False),
    sa.Column('leaf_type_id', sa.Integer(), nullable=False),
    sa.Column('genus_id', sa.Integer(), nullable=False),
    sa.Column('species_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['genus_id'], ['genus_list.id'], ),
    sa.ForeignKeyConstraint(['leaf_type_id'], ['leaf_types.id'], ),
    sa.ForeignKeyConstraint(['life_form_id'], ['life_forms.id'], ),
    sa.ForeignKeyConstraint(['species_id'], ['species_list.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('regions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('researches',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('goal', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('period', postgresql.DATERANGE(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['status_id'], ['statuses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('districts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('region_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('morphological_features_leaf_associations',
    sa.Column('morphological_feature_id', sa.Integer(), nullable=False),
    sa.Column('leaf_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['leaf_id'], ['leaves.id'], ),
    sa.ForeignKeyConstraint(['morphological_feature_id'], ['morphological_features.id'], ),
    sa.PrimaryKeyConstraint('morphological_feature_id', 'leaf_id')
    )
    op.create_table('settlements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('district_id', sa.Integer(), nullable=False),
    sa.Column('settlement_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ),
    sa.ForeignKeyConstraint(['settlement_type_id'], ['settlement_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'district_id', 'settlement_type_id')
    )
    op.create_table('street_settlement_associations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('street_id', sa.Integer(), nullable=False),
    sa.Column('settlement_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['settlement_id'], ['settlements.id'], ),
    sa.ForeignKeyConstraint(['street_id'], ['streets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('street_id', 'settlement_id')
    )
    op.create_table('addresses',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('house_number_id', sa.Integer(), nullable=False),
    sa.Column('street_settlement_association_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['house_number_id'], ['house_numbers.id'], ),
    sa.ForeignKeyConstraint(['street_settlement_association_id'], ['street_settlement_associations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('house_number_id', 'street_settlement_association_id')
    )
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address_id', sa.UUID(), nullable=False),
    sa.Column('organization_details_id', sa.Integer(), nullable=False),
    sa.Column('organization_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.id'], ),
    sa.ForeignKeyConstraint(['organization_details_id'], ['organization_details_list.id'], ),
    sa.ForeignKeyConstraint(['organization_type_id'], ['organization_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address_id', 'organization_details_id')
    )
    op.create_table('plants',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('address_id', sa.UUID(), nullable=False),
    sa.Column('plant_description_id', sa.Integer(), nullable=False),
    sa.Column('additional_info', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.id'], ),
    sa.ForeignKeyConstraint(['plant_description_id'], ['plants_descriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pollutions_near_place_list',
    sa.Column('address_id', sa.UUID(), nullable=False),
    sa.Column('pollution_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.id'], ),
    sa.ForeignKeyConstraint(['pollution_type_id'], ['pollution_types.id'], ),
    sa.PrimaryKeyConstraint('pollution_type_id')
    )
    op.create_table('jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_title_id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['job_title_id'], ['job_titles.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('job_title_id', 'organization_id')
    )
    op.create_table('research_plant_associations',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('research_id', sa.UUID(), nullable=False),
    sa.Column('plant_id', sa.UUID(), nullable=False),
    sa.Column('s3_key_final_morphological_result', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['plant_id'], ['plants.id'], ),
    sa.ForeignKeyConstraint(['research_id'], ['researches.id'], ),
    sa.PrimaryKeyConstraint('id', 'research_id', 'plant_id'),
    sa.UniqueConstraint('research_id', 'plant_id'),
    sa.UniqueConstraint('s3_key_final_morphological_result')
    )
    op.create_table('biochem_analyses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('additional_info', sa.String(), nullable=False),
    sa.Column('research_id', sa.UUID(), nullable=False),
    sa.Column('plant_id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('s3_key', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['research_id', 'plant_id'], ['research_plant_associations.research_id', 'research_plant_associations.plant_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('s3_key')
    )
    op.create_table('photo_dirs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('research_id', sa.UUID(), nullable=False),
    sa.Column('plant_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('s3_key_joined_result_csv', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['research_id', 'plant_id'], ['research_plant_associations.research_id', 'research_plant_associations.plant_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('s3_key_joined_result_csv')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('surname', sa.String(), nullable=False),
    sa.Column('patronymic', sa.String(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('orcid_link', sa.String(), nullable=True),
    sa.Column('orcid_id', sa.String(), nullable=True),
    sa.Column('birthday', sa.Date(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('biochem_analysis_feature_associations',
    sa.Column('biochem_analysis_id', sa.Integer(), nullable=False),
    sa.Column('biochem_feature_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['biochem_analysis_id'], ['biochem_analyses.id'], ),
    sa.ForeignKeyConstraint(['biochem_feature_id'], ['biochem_features.id'], ),
    sa.PrimaryKeyConstraint('biochem_analysis_id', 'biochem_feature_id')
    )
    op.create_table('leaves_template_photos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('photo_dir_id', sa.Integer(), nullable=False),
    sa.Column('s3_key_template', sa.String(), nullable=False),
    sa.Column('s3_key_result_csv', sa.String(), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.ForeignKeyConstraint(['photo_dir_id'], ['photo_dirs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('s3_key_result_csv'),
    sa.UniqueConstraint('s3_key_template')
    )
    op.create_table('user_research_associations',
    sa.Column('research_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['research_id'], ['researches.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('research_id', 'user_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_research_associations')
    op.drop_table('leaves_template_photos')
    op.drop_table('biochem_analysis_feature_associations')
    op.drop_table('users')
    op.drop_table('photo_dirs')
    op.drop_table('biochem_analyses')
    op.drop_table('research_plant_associations')
    op.drop_table('jobs')
    op.drop_table('pollutions_near_place_list')
    op.drop_table('plants')
    op.drop_table('organizations')
    op.drop_table('addresses')
    op.drop_table('street_settlement_associations')
    op.drop_table('settlements')
    op.drop_table('morphological_features_leaf_associations')
    op.drop_table('districts')
    op.drop_table('researches')
    op.drop_table('regions')
    op.drop_table('plants_descriptions')
    op.drop_table('morphological_features')
    op.drop_table('leaves')
    op.drop_table('biochem_features')
    op.drop_table('streets')
    op.drop_table('statuses')
    op.drop_table('species_list')
    op.drop_table('sides_of_the_world')
    op.drop_table('settlement_types')
    op.drop_table('roles')
    op.drop_table('pollution_types')
    op.drop_table('organization_types')
    op.drop_table('organization_details_list')
    op.drop_table('name_category')
    op.drop_table('measurement_units')
    op.drop_table('locations_on_plant')
    op.drop_table('life_forms')
    op.drop_table('leaf_types')
    op.drop_table('job_titles')
    op.drop_table('house_numbers')
    op.drop_table('genus_list')
    op.drop_table('countries')
    # ### end Alembic commands ###

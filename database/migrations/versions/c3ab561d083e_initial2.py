"""initial2

Revision ID: c3ab561d083e
Revises: faea24d15079
Create Date: 2025-05-23 00:55:12.747378

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c3ab561d083e'
down_revision: Union[str, None] = 'faea24d15079'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('specialist',
    sa.Column('surname', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('job_title', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('orchid', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bio_chem',
    sa.Column('chlorophyll_a', sa.Numeric(), nullable=False),
    sa.Column('chlorophyll_b', sa.Numeric(), nullable=False),
    sa.Column('carotenoids', sa.Numeric(), nullable=False),
    sa.Column('phenols', sa.Numeric(), nullable=False),
    sa.Column('anthocyanins', sa.Numeric(), nullable=False),
    sa.Column('peroxidase', sa.Numeric(), nullable=False),
    sa.Column('vitamin_c', sa.Numeric(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('note', sa.String(), nullable=False),
    sa.Column('analysis_date', sa.DateTime(), nullable=False),
    sa.Column('laboratory_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['laboratory_id'], ['laboratory.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('article',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('plant_id', sa.UUID(), nullable=True),
    sa.Column('journal_name', sa.String(), nullable=False),
    sa.Column('link', sa.String(), nullable=False),
    sa.Column('file', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['plant_id'], ['plant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('leaf',
    sa.Column('plant_id', sa.UUID(), nullable=True),
    sa.Column('date_of_measurement', sa.DateTime(), nullable=False),
    sa.Column('side_of_the_world', sa.String(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('photo', sa.String(), nullable=False),
    sa.Column('location_on_the_plant', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['plant_id'], ['plant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('morphological_feature',
    sa.Column('area', sa.Numeric(), nullable=False),
    sa.Column('length', sa.Numeric(), nullable=False),
    sa.Column('left_second_vein_length', sa.Numeric(), nullable=False),
    sa.Column('right_second_vein_length', sa.Numeric(), nullable=False),
    sa.Column('left_btw_first_n_second_veins_ends_dist', sa.Numeric(), nullable=False),
    sa.Column('right_btw_first_n_second_veins_ends_dist', sa.Numeric(), nullable=False),
    sa.Column('left_btw_first_n_second_veins_begins_dist', sa.Numeric(), nullable=False),
    sa.Column('right_btw_first_n_second_veins_begins_dist', sa.Numeric(), nullable=False),
    sa.Column('left_btw_second_n_central_veins_angle', sa.Numeric(), nullable=False),
    sa.Column('right_btw_second_n_central_veins_angle', sa.Numeric(), nullable=False),
    sa.Column('left_halfs_width', sa.Numeric(), nullable=False),
    sa.Column('right_halfs_width', sa.Numeric(), nullable=False),
    sa.Column('leaf_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['leaf_id'], ['leaf.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('laboratory_assistant')
    op.drop_table('publication')
    op.add_column('place', sa.Column('type_of_settlement', sa.String(), nullable=False))
    op.alter_column('place', 'country',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('place', 'region',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('place', 'city',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('place', 'district',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('place', 'district',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('place', 'city',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('place', 'region',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('place', 'country',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('place', 'type_of_settlement')
    op.create_table('publication',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('plant_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('journal_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['plant_id'], ['plant.id'], name='publication_plant_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='publication_pkey')
    )
    op.create_table('laboratory_assistant',
    sa.Column('surname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('job_title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='laboratory_assistant_pkey')
    )
    op.drop_table('morphological_feature')
    op.drop_table('leaf')
    op.drop_table('article')
    op.drop_table('bio_chem')
    op.drop_table('specialist')
    # ### end Alembic commands ###
